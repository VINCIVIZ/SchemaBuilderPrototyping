<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:SchemaBuilderPrototypingScreens" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:pi="http://schemas.microsoft.com/prototyping/2010/interactivity"
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	x:Class="SchemaBuilderPrototypingScreens.Concept"
	Width="1250" Height="1404" mc:Ignorable="d">

	<i:Interaction.Triggers>
		<i:EventTrigger>
			<pi:ActivateStateAction TargetState="ColonCancerWorking" TargetScreen="SchemaBuilderPrototypingScreens.Header"/>
			<pi:ActivateStateAction TargetState="VarNameNotSubmitted"/>
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Grid Background="White">
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="TestCategoryChecking">
				<VisualState x:Name="TestChecked"/>
				<VisualState x:Name="TestUnchecked">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ToggleButton.IsChecked)" Storyboard.TargetName="checkBox4">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<System:Boolean>False</System:Boolean>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="variableLinkControl">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="LinkToDef">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.5"/>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="LinkToOther">
					<Storyboard>
						<DoubleAnimation Duration="0" To="194" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="path" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="path" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="195" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="-0.654" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="97" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="LinkToColon"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="DefExpanding">
				<VisualState x:Name="WikiExpand">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="richTextBox">
							<DiscreteObjectKeyFrame KeyTime="0:0:0.5">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hyperlinkButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="WikiCollapse"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="DefinitionGroup">
				<VisualState x:Name="DefinitionGroupCorrected">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel1">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel2">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="DefinitionGroupOriginal"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="VariableName">
				<VisualState x:Name="VariableNameOriginal"/>
				<VisualState x:Name="VariableNameChanged">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBox.Text)" Storyboard.TargetName="textBox">
							<DiscreteObjectKeyFrame KeyTime="0" Value="Colon Cancer"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="DefinitionUsageHighlight">
				<VisualState x:Name="UMLSHighlighted"/>
				<VisualState x:Name="WikiHighlighted">
					<Storyboard>
						<ColorAnimation Duration="0" To="#FFFFBB00" Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.BorderThickness)" Storyboard.TargetName="richTextBox">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Thickness>1</Thickness>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Direction)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="15" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<ColorAnimation Duration="0" To="#FFFFBB00" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="richTextBox1" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="richTextBox" d:IsOptimized="True"/>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBox.Text)" Storyboard.TargetName="textBox1">
							<DiscreteObjectKeyFrame KeyTime="0" Value="Colorectal cancer, commonly known as colon cancer or bowel cancer, is a cancer from uncontrolled cell growth in the colon or rectum (parts of the large intestine), or in the appendix. Genetic analysis shows that colon and rectal tumours are essentially genetically the same cancer.[1] Symptoms of colorectal cancer typically include rectal bleeding and anemia which are sometimes associated with weight loss and changes in bowel habits."/>
						</ObjectAnimationUsingKeyFrames>
						<ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="richTextBox1" d:IsOptimized="True"/>
					</Storyboard>	
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="VarNameSubmission">
				<VisualState x:Name="VarNameSubmitted"/>
				<VisualState x:Name="VarNameNotSubmitted">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="linkingTextBlock">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="linkGridPanel">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle2">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock3">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox2">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock4">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="CertaintyAdded">
				<VisualState x:Name="CertaintyHidden"/>
				<VisualState x:Name="CertaintyShown">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="certaintyButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="certaintyCombo">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="TemporalAdded">
				<VisualState x:Name="TemporalHidden"/>
				<VisualState x:Name="TemporalShown">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="temporalButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="temporalCombo">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="ExperiencerAdded">
				<VisualState x:Name="ExperiencerHidden"/>
				<VisualState x:Name="ExperiencerShown">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="experiencerButton">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="experiencerCombo">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>	
		</VisualStateManager.VisualStateGroups>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" HorizontalAlignment="Left" Margin="5" FontSize="32" FontWeight="Bold" Cursor="Hand">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseLeftButtonDown">
						<pi:NavigateToScreenAction TargetScreen="SchemaBuilderPrototypingScreens.SchemaList"/>
					</i:EventTrigger>
				</i:Interaction.Triggers><Run Text="Schema Builder"/></TextBlock>
			<StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,10">
				<HyperlinkButton FontSize="23">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<pi:NavigateToScreenAction TargetScreen="SchemaBuilderPrototypingScreens.SchemaView"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>MySchema_1 - </HyperlinkButton>
				<TextBlock x:Name="titleCertainty" Style="{StaticResource BasicTextBlock-Sketch}" Text="C" FontSize="28" Margin="5,0" Visibility="Collapsed"/>
				<TextBlock x:Name="titleTemporal" Style="{StaticResource BasicTextBlock-Sketch}" Text="T" FontSize="28" Margin="5,0" Visibility="Collapsed"/>
				<TextBlock x:Name="titleExperiencer" Style="{StaticResource BasicTextBlock-Sketch}" Text="E" FontSize="28" Margin="5,0" Visibility="Collapsed"/>	
				<TextBlock x:Name="titleVarName" Style="{StaticResource BasicTextBlock-Sketch}" Text="ColonCancer" FontSize="28" Margin="5,0"/>
			</StackPanel>	
			<Rectangle Height="5" Grid.Row="2" Fill="Black"/>
		</Grid>
		
		<!--<local:Header Width="Auto" d:LayoutOverrides="Height" d:IsPrototypingComposition="True">
			<i:Interaction.Triggers>
				<i:EventTrigger>
					<pi:ActivateStateAction TargetScreen="SchemaBuilderPrototypingScreens.Header" TargetState="SchemaList"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</local:Header>-->
		
		<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
			<Button x:Name="button" Style="{StaticResource Button-Sketch}" Margin="20" Content="Back">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<pi:NavigateToScreenAction TargetScreen="SchemaBuilderPrototypingScreens.Screen_1"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button x:Name="button1" Style="{StaticResource Button-Sketch}" Margin="20" Content="Next">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<pi:NavigateToScreenAction TargetScreen="SchemaBuilderPrototypingScreens.Concept_Attributes"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button x:Name="button2" Style="{StaticResource Button-Sketch}" Margin="20" Content="Finish"/>
		</StackPanel>
				
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<local:ConceptStepList HorizontalAlignment="Left" Height="Auto" d:IsPrototypingComposition="True">
						<i:Interaction.Triggers>
							<i:EventTrigger>
								<pi:ActivateStateAction TargetScreen="SchemaBuilderPrototypingScreens.ConceptStepList" TargetState="Highlight1"/>
							</i:EventTrigger>
			</i:Interaction.Triggers></local:ConceptStepList>			
					
			<ScrollViewer Grid.Column="1">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>		
									
					<StackPanel Grid.Column="1" Margin="10,10">
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" FontSize="32" Text="Variable Name"/>
						<StackPanel Orientation="Horizontal" Margin="5,10">
							<Button x:Name="certaintyButton" Content="C" Width="32" Style="{StaticResource Button-Sketch}" ToolTipService.ToolTip="Add certainty modifier" Margin="10,0" Opacity="0.5">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="MouseEnter">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="1" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="MouseLeave">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="0.5" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="Click">
										<pi:ActivateStateAction TargetState="CertaintyShown"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=certaintyCombo}" PropertyName="SelectedIndex"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleCertainty}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=certaintyCombo}"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleCertainty}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
							<ComboBox x:Name="certaintyCombo" Style="{StaticResource ComboBox-Sketch}" Margin="10,0" Visibility="Collapsed" SelectedIndex="0">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleCertainty}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=certaintyCombo}"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleCertainty}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>									
									<i:EventTrigger EventName="SelectionChanged">
										<i:Interaction.Behaviors>
											<ei:ConditionBehavior>
												<ei:ConditionalExpression>
													<ei:ComparisonCondition LeftOperand="{Binding SelectedIndex, ElementName=certaintyCombo}" RightOperand="3"/>
												</ei:ConditionalExpression>
											</ei:ConditionBehavior>
										</i:Interaction.Behaviors>
										<pi:ActivateStateAction TargetState="CertaintyHidden"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleCertainty}" PropertyName="Visibility" Value="Collapsed"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
								<ComboBoxItem Content="Possible" IsSelected="True"/>
								<ComboBoxItem Content="Proposed"/>
								<ComboBoxItem Content="No" ToolTipService.ToolTip="Negated certainty (text pending)"/>
								<ComboBoxItem Content="Remove Certainty" Foreground="Red" ToolTipService.ToolTip="Remove the certainty modifier; means 'actual' (text pending)"/>
							</ComboBox>
							
							<Button x:Name="experiencerButton" Content="E" Width="32" Style="{StaticResource Button-Sketch}" ToolTipService.ToolTip="Add experiencer modifier" Margin="10,0" Opacity="0.5">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="MouseEnter">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="1" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="MouseLeave">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="0.5" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="Click">
										<pi:ActivateStateAction TargetState="ExperiencerShown"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=experiencerCombo}" PropertyName="SelectedIndex"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleExperiencer}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=experiencerCombo}"/>										
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleExperiencer}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>									
								</i:Interaction.Triggers>
							</Button>
							<ComboBox x:Name="experiencerCombo" Style="{StaticResource ComboBox-Sketch}" Margin="10,0" Visibility="Collapsed" SelectedIndex="0">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleExperiencer}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=experiencerCombo}"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleExperiencer}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>										
									<i:EventTrigger EventName="SelectionChanged">
										<i:Interaction.Behaviors>
											<ei:ConditionBehavior>
												<ei:ConditionalExpression>
													<ei:ComparisonCondition LeftOperand="{Binding SelectedIndex, ElementName=experiencerCombo}" RightOperand="1"/>
												</ei:ConditionalExpression>
											</ei:ConditionBehavior>
										</i:Interaction.Behaviors>
										<pi:ActivateStateAction TargetState="ExperiencerHidden"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleExperiencer}" PropertyName="Visibility" Value="Collapsed"/>
									</i:EventTrigger>								
								</i:Interaction.Triggers>								
								<ComboBoxItem Content="family" IsSelected="True"/>
								<ComboBoxItem Content="Remove Experiencer" Foreground="Red" ToolTipService.ToolTip="Remove the experiencer modifier, means 'with patient' (text pending)"/>
							</ComboBox>
							
							<Button x:Name="temporalButton" Content="T" Width="32" Style="{StaticResource Button-Sketch}" ToolTipService.ToolTip="Add temporality modifier" Margin="10,0" Opacity="0.5">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="MouseEnter">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="1" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="MouseLeave">
										<ei:ChangePropertyAction PropertyName="Opacity" Value="0.5" Duration="00:00:0.5"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="Click">
										<pi:ActivateStateAction TargetState="TemporalShown"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=temporalCombo}" PropertyName="SelectedIndex"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleTemporal}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=temporalCombo}"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleTemporal}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>									
								</i:Interaction.Triggers>
							</Button>
							<ComboBox x:Name="temporalCombo" Style="{StaticResource ComboBox-Sketch}" Margin="10,0" Visibility="Collapsed" SelectedIndex="0">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleTemporal}" PropertyName="Text" Value="{Binding SelectedItem.Content, ElementName=temporalCombo}"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleTemporal}" PropertyName="Visibility" Value="Visible"/>
									</i:EventTrigger>										
									<i:EventTrigger EventName="SelectionChanged">
										<i:Interaction.Behaviors>
											<ei:ConditionBehavior>
												<ei:ConditionalExpression>
													<ei:ComparisonCondition LeftOperand="{Binding SelectedIndex, ElementName=temporalCombo}" RightOperand="2"/>
												</ei:ConditionalExpression>
											</ei:ConditionBehavior>
										</i:Interaction.Behaviors>
										<pi:ActivateStateAction TargetState="TemporalHidden"/>
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleTemporal}" PropertyName="Visibility" Value="Collapsed"/>
									</i:EventTrigger>								
								</i:Interaction.Triggers>								
								<ComboBoxItem Content="history of" IsSelected="True"/>
								<ComboBoxItem Content="future"/>
								<ComboBoxItem Content="Remove Temporality" Foreground="Red" ToolTipService.ToolTip="Remove the temporality modifier; means 'current' (text pending)" />
							</ComboBox>
							
							<TextBox x:Name="textBox" Style="{StaticResource BasicTextBox-Sketch}" Text="ColonCancer" MinWidth="100" Margin="10,0">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="LostFocus">
										<ei:ChangePropertyAction TargetObject="{Binding ElementName=titleVarName}" PropertyName="Text" Value="{Binding Text, ElementName=textBox}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</TextBox>
							
							
							
						</StackPanel>
						<Button Content="Submit" Style="{StaticResource Button-Sketch}" Width="75">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<pi:ActivateStateAction TargetState="VarNameSubmitted"/>
										<pi:ActivateStateAction TargetScreen="SchemaBuilderPrototypingScreens.Header" TargetState="ColonCancerWorking"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
						</Button>
						
						<Rectangle x:Name="rectangle1" HorizontalAlignment="Stretch" Height="1" Fill="Black" Margin="0,20"/>
						
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							
							<StackPanel Grid.Column="0">
								<TextBlock x:Name="linkingTextBlock" Style="{StaticResource BasicTextBlock-Sketch}" FontSize="32" Text="Link to Reference"/>
								<Grid x:Name="linkGridPanel">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="30"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									
									<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="Link" HorizontalAlignment="Center"/>
									<TextBlock Grid.Column="1" Style="{StaticResource BasicTextBlock-Sketch}" Text="Reference" Margin="10,0,0,0"/>
									
									<Grid Grid.Row="1" Grid.ColumnSpan="2" Background="White">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="30"/>
											<ColumnDefinition Width="300"/>
											<ColumnDefinition Width="150"/>
										</Grid.ColumnDefinitions>
										
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseEnter">
												<ei:ChangePropertyAction TargetObject="{Binding ElementName=colonCancerHyperlinkButton}" PropertyName="Visibility" TargetName="hyperlinkButton">
													<ei:ChangePropertyAction.Value>
														<Visibility>Visible</Visibility>
													</ei:ChangePropertyAction.Value>
												</ei:ChangePropertyAction>
											</i:EventTrigger>
											<i:EventTrigger EventName="MouseLeave">
												<ei:ChangePropertyAction TargetObject="{Binding ElementName=colonCancerHyperlinkButton}" PropertyName="Visibility" TargetName="hyperlinkButton">
													<ei:ChangePropertyAction.Value>
														<Visibility>Collapsed</Visibility>
													</ei:ChangePropertyAction.Value>
												</ei:ChangePropertyAction>
											</i:EventTrigger>
										</i:Interaction.Triggers>
										
										<CheckBox x:Name="colonCancerCheckBox" Style="{StaticResource CheckBox-Sketch}" HorizontalAlignment="Center" VerticalAlignment="Center">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Checked">
													<pi:ActivateStateAction TargetState="DefinitionGroupCorrected"/>
												</i:EventTrigger>
												<i:EventTrigger EventName="Unchecked">
													<pi:ActivateStateAction TargetState="DefinitionGroupOriginal"/>
												</i:EventTrigger>									
											</i:Interaction.Triggers>
										</CheckBox>
										<TextBlock x:Name="textBlock" Grid.Column="1" Style="{StaticResource BasicTextBlock-Sketch}" Text="Colon Cancer (Symptom in UMLS)"/>
										<HyperlinkButton x:Name="colonCancerHyperlinkButton" Grid.Column="2" Content="Use as variable name" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Click">
													<pi:ActivateStateAction TargetState="VariableNameChanged"/>
													<ei:ChangePropertyAction TargetObject="{Binding ElementName=colonCancerCheckBox}" PropertyName="IsChecked" Value="True"/>
													<pi:ActivateStateAction TargetState="ColonCancerCorrectedWorking" TargetScreen="SchemaBuilderPrototypingScreens.Header"/>
												</i:EventTrigger>																											
											</i:Interaction.Triggers>
										</HyperlinkButton>
									</Grid>
									
									<local:VariableLinkControl x:Name="variableLinkControl" Grid.Row="2" Grid.ColumnSpan="2" Tag="Colon cancer screening (Test in UMLS)"/>
									<local:VariableLinkControl Grid.Row="3" Grid.ColumnSpan="2" Tag="Colonoscopy (Diagnosis in Wikipedia)"/>
									<local:VariableLinkControl Grid.Row="4" Grid.ColumnSpan="2" Tag="Colon bacillus"/>						
								</Grid>
							</StackPanel>
						</Grid>
						
						<Rectangle x:Name="rectangle2" HorizontalAlignment="Stretch" Height="1" Fill="Black" Margin="0,20"/>
						
						<StackPanel x:Name="stackPanel1" Grid.Column="2" Visibility="Collapsed">
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" FontSize="32" Text="Build your definition"/>
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="Colon Cancer" FontSize="24" TextDecorations="Underline" Margin="10,5"/>
						<TextBox x:Name="textBox1" Style="{StaticResource BasicTextBox-Sketch}" TextWrapping="Wrap" Margin="10,5" Text="Colon, or colorectal, cancer is cancer that starts in the large intenstine (colon) or the rectum (end of the colon)." Height="100" VerticalScrollBarVisibility="Auto"/>		
						
						<Rectangle HorizontalAlignment="Stretch" Height="1" Fill="Black" Margin="0,20"/>
						
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="Colon Cancer (UMLS)" FontSize="24" TextDecorations="Underline" Margin="10,5"/>
						<RichTextBox x:Name="richTextBox1" Height="80" Margin="5,10" IsReadOnly="True" BorderBrush="#FFFFBB00">
							<RichTextBox.Effect>
								<DropShadowEffect ShadowDepth="0" Color="#FFFFBB00" Direction="0" BlurRadius="15"/>
							</RichTextBox.Effect>
							<Paragraph><Run Text="Colon, or colorectal, cancer is cancer that starts in the large intenstine (colon) or the rectum (end of the colon)."/></Paragraph>
							<Paragraph><Run Text="Source: "/><Hyperlink NavigateUri="#"><Run Text="UMLS"/></Hyperlink></Paragraph>
							<!--<Paragraph>
								<Hyperlink NavigateUri="#">
									<Run Text="Use this definition"/>
								</Hyperlink>
							</Paragraph>-->
						</RichTextBox>
						<HyperlinkButton Content="Use this definition" HorizontalAlignment="Center">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<pi:ActivateStateAction TargetState="UMLSHighlighted"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>	
						</HyperlinkButton>
						
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="(Other Definition)" FontSize="24" TextDecorations="Underline" Margin="10,5"/>
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="Colon Cancer (Wikipedia)" FontSize="24" TextDecorations="Underline" Margin="10,5" Cursor="Hand">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="MouseLeftButtonDown">
									<i:Interaction.Behaviors>
										<ei:ConditionBehavior>
											<ei:ConditionalExpression>
												<ei:ComparisonCondition LeftOperand="{Binding Visibility, ElementName=richTextBox}" RightOperand="Collapsed"/>
											</ei:ConditionalExpression>
										</ei:ConditionBehavior>
									</i:Interaction.Behaviors>
									<pi:ActivateStateAction TargetState="WikiExpand"/>
								</i:EventTrigger>
								<i:EventTrigger EventName="MouseLeftButtonDown">
									<i:Interaction.Behaviors>
										<ei:ConditionBehavior>
											<ei:ConditionalExpression>
												<ei:ComparisonCondition LeftOperand="{Binding Visibility, ElementName=richTextBox}" RightOperand="Visible"/>
											</ei:ConditionalExpression>
										</ei:ConditionBehavior>
									</i:Interaction.Behaviors>
									<pi:ActivateStateAction TargetState="WikiCollapse"/>
								</i:EventTrigger>							
							</i:Interaction.Triggers>
						</TextBlock>
						<RichTextBox x:Name="richTextBox" Height="100" Margin="5,10" IsReadOnly="True" BorderBrush="Black" Visibility="Collapsed">
							<RichTextBox.Effect>
								<DropShadowEffect BlurRadius="0" Opacity="0"/>
							</RichTextBox.Effect>
							<Paragraph><Run Text="Colorectal cancer, commonly known as colon cancer or bowel cancer, is a cancer from uncontrolled cell growth in the colon or rectum (parts of the large intestine), or in the appendix. Genetic analysis shows that colon and rectal tumours are essentially genetically the same cancer.[1] Symptoms of colorectal cancer typically include rectal bleeding and anemia which are sometimes associated with weight loss and changes in bowel habits."/></Paragraph>
							<Paragraph><Run Text="Source: "/><Hyperlink NavigateUri="http://en.wikipedia.org/wiki/Colorectal_cancer"><Run Text="Wikipedia"/></Hyperlink></Paragraph>
							<!--<Paragraph><Hyperlink NavigateUri="#"><Run Text="Use this definition"/></Hyperlink></Paragraph>-->
						</RichTextBox>
						<HyperlinkButton x:Name="hyperlinkButton" Content="Use this definition" HorizontalAlignment="Center" Visibility="Collapsed">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<pi:ActivateStateAction TargetState="WikiHighlighted"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>	
						</HyperlinkButton>
						<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="(Other Definition)" FontSize="24" TextDecorations="Underline" Margin="10,5"/>

					</StackPanel>
					
					<StackPanel x:Name="stackPanel2" Grid.Column="2">
						<TextBlock x:Name="textBlock4" Style="{StaticResource BasicTextBlock-Sketch}" FontSize="32" Text="Build your definition"/>
						<TextBlock x:Name="textBlock3" Style="{StaticResource BasicTextBlock-Sketch}" Text="ColonCancer" FontSize="24" TextDecorations="Underline" Margin="10,5"/>
						<TextBox x:Name="textBox2" Style="{StaticResource BasicTextBox-Sketch}" TextWrapping="Wrap" Margin="10,5" Height="100" VerticalScrollBarVisibility="Auto"/>		
					</StackPanel>
						
					</StackPanel>
					
					<Border Grid.Column="2" BorderThickness="1,0,0,0" BorderBrush="Black">
						<StackPanel Margin="10,10,20,0">
							<TextBlock Style="{StaticResource BasicTextBlock-Sketch}" Text="Category" FontSize="32"/>
							<CheckBox x:Name="checkBox" Content="Diagnosis" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox Content="Symptom" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox x:Name="checkBox4" Content="Test" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Checked">
										<pi:ActivateStateAction TargetState="TestChecked"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="Unchecked">
										<pi:ActivateStateAction TargetState="TestUnchecked"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</CheckBox>
							<CheckBox Content="Medication" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox x:Name="checkBox1" Content="Procedure" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox x:Name="checkBox2" Content="Encounter" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox Content="Allergy" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
							<CheckBox x:Name="checkBox3" Content="Social History" Style="{StaticResource CheckBox-Sketch}" IsChecked="True" IsEnabled="True"/>
						</StackPanel>
					</Border>
					
				</Grid>
			</ScrollViewer>
		</Grid>
	</Grid>
	
</UserControl>